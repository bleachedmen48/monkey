-- This file was generated using Luraph Obfuscator v13.5.5

do return(function(Qp,Tp,tp,Mp,Rp,xp,Bp,Jp,dp,mp,op,Vp,up,ep,ip,yp,Yp,Gp,Kp,gp,Xp,Np,zp,Pp,qp,sp,lp,bp,Cp,Op,fp,np,Lp,Sp,kp,Ap,Wp,vp,...)local f,q,o=0X1,{[0X0]={[0X0000]=0,1,0x02,0x3,4,5,0X6,0x0007,0X008,9,0XA,11,12,0x000D,14,15},{[0]=0X001,0X0,0X3,0x2,Rp,0x4,7,0x6,9,0X8,0XB,0X0000a,0X0000D,dp,0X0f,0xE},{[0x000]=0x2,0x3,0x00,1,0X6,0X007,4,5,0XA,0X0000b,8,9,0XE,15,0Xc,13},{[ip]=3,2,0X1,0,0X7,6,5,4,11,0X0000a,0X0009,0X8,15,0X000e,Jp,12},{[0]=4,0X5,6,tp,0,1,0x00002,0x3,0X0c,0Xd,14,ep,8,9,0XA,11},{[0]=0x005,0X4,7,6,0X01,0,0X3,0X02,0XD,12,15,0Xe,9,8,0x000B,0X0000A},{[0x000]=Lp,0X7,0X04,0X5,0X2,0x3,0x00,1,0x0000E,0XF,0X0C,13,10,11,0x0008,9},{[0]=0X00007,0x6,0X005,Sp,3,0X2,0X1,0x0,0Xf,0xe,13,12,0X000B,vp,9,8},{[0X0]=8,9,0xA,11,0x000c,Jp,14,15,0,0X00001,0x002,Np,0X4,5,6,0x7},{[0]=0X9,op,11,10,Jp,dp,0X0000F,0X00e,1,0,3,2,0X5,4,tp,6},{[0]=10,0XB,8,0X9,14,15,12,13,2,Np,0X0,0X1,0X6,7,4,Rp},{[0]=0xB,10,9,0X0008,0X00F,0XE,0Xd,12,3,0X2,1,0x0000,tp,6,5,4},{[0X0]=12,Jp,gp,0X000f,8,9,0X000A,kp,4,0X005,6,0X007,0,0X0001,0X2,3},{[0X000]=0x0000D,0xc,ep,14,0X9,8,kp,0Xa,5,4,7,6,0x0001,0X0,3,2},{[0X0000]=0X00e,0Xf,0x000c,13,0x000a,11,8,9,6,7,4,5,2,0X03,0x00,1},{[0]=15,0x0e,13,0X0c,11,10,fp,0X0008,0X7,0X006,0X5,4,0X3,0X0002,0X00001,0x0}},(Cp);local H=tostring;local F=pcall;local p=(Yp);local N,E,Zp=mp or np.unpack,Qp,(0X00001);local I,S=nil,(nil);while Zp~=0X2 do if Zp==0X00000 then do S=Wp;end;do Zp=2;end;else I=Bp;Zp=0;end;end;local a=(string.char);Zp=0x001;local Hp,R=nil,(nil);while Zp~=0X2 do if Zp==0 then R=string.gsub;Zp=2;else Hp=0x00001;Zp=0;end;end;local c=(type);do Zp=1;end;local Y,i=nil,(nil);repeat if Zp==0 then i=xp;Zp=2;else do Y=Op.rep;end;do Zp=0;end;end;until Zp>=0X00002;local t,L,D=rawget,next,zp;Zp=1;local v,O=nil,nil;repeat if Zp<=0 then do Zp=3;end;else if Zp==0x001 then v=coroutine.yield;Zp=0x2;else O=0X100000000;do Zp=0;end;end;end;until Zp>=0X03;local g=(getfenv);Zp=0X00;local k,C,J=nil,nil,nil;while Zp~=4 do if Zp<=0X1 then if Zp==0X0000 then k=(g and g()or _ENV);Zp=1;else Zp=0X2;end;else if Zp==2 then doend;do Zp=3;end;else J=Pp;do Zp=0X4;end;end;end;end;local rp,m=nil,nil;for LU=0x0,1 do if LU==0 then rp={};else end;end;C=R(I(C,Rp),"..",function(wx)do if E(wx,0X2)~=0X48 then local jp,Up=0,nil;repeat do if jp==0X0 then Up=a(D(wx,16));jp=1;else if m then local Ds=(2);local hp=nil;while"(CKo"do if not(Ds<=0)then do if Ds==0x1 then m=lp;Ds=0;else do hp=Y(Up,m);end;do Ds=0x0001;end;end;end;else do return hp;end;end;end;else return Up;end;do jp=0x2;end;end;end;until jp>=2;else for C8=0,1 do do if C8==0 then m=D(I(wx,1,0x01));else return"";end;end;end;end;end;end);local Q=(function()local A6=(nil);for dX=0,2 do do if dX<=0 then A6=E(C,f,f);else if dX~=1 then return A6;else f=f+1;end;end;end;end;end);local W=(0X80000000);local G={1,3,6};Zp=0x0;local x,B,l,d,P=nil,nil,nil,nil,(nil);while Zp<=0X00005 do if Zp<=0x2 then if Zp<=0X0 then x=2^0X34;Zp=0X04;else if Zp==0X1 then do l={[0]=1};end;Zp=0X5;else do local B9=(2);do for vi=1,0x1f do local Ui=(0);while Ui<=1 do if Ui~=0 then B9=B9*2;Ui=0x00002;else l[vi]=B9;Ui=1;end;end;end;end;end;do Zp=0X03;end;end;end;else if Zp<=3 then P=W-Vp;Zp=6;else if Zp==0x4 then B=function()local d7,f7,c7,p7=E(C,f,f+3);f=f+0X4;return p7*up+c7*0x10000+f7*256+d7;end;Zp=1;else do d=Mp;end;Zp=0X00002;end;end;end;end;local z,M,u,V,K=O-1,nil,nil,nil,(nil);for O8=0X0,3 do if O8<=1 then if O8~=0 then u=function(G6,M6,l6)local a6=nil;for xt=0,0x1 do if xt==0 then a6=(G6/l[M6])%l[l6];else a6=a6-a6%0X001;end;end;return a6;end;else M=function()local Xd,wd=B(),(B());do if wd>=W then wd=wd-O;end;end;return wd*O+Xd;end;end;else do if O8==0x2 then do V=function()local GD,jp,hp,oD,Up,jD,nD=1,nil,nil,nil,nil,nil,nil;repeat if not(GD<=2)then if not(GD<=0X4)then if GD==0X05 then jD=u(hp,0X14,11);GD=6;else do nD=u(hp,0x0,20)*O+jp;end;do GD=0x0007;end;end;else if GD==3 then if jp==0 and hp==0 then return 0;end;GD=2;else hp=B();GD=0;end;end;else if GD<=0X00000 then do oD=Vp;end;GD=3;else do if GD~=0X0001 then Up=(-1)^u(hp,31,0x01);GD=0X5;else do jp=B();end;do GD=0X4;end;end;end;end;end;until GD==0X7;GD=1;while 0.27643339949584833 do do if GD==0 then return Up*(qp^(jD-0X3FF))*(nD/x+oD);else if jD==0 then do if nD==0 then return Up*0;else jD=1;oD=ip;end;end;else if jD==2047 then if nD==0x0 then return Up*(0/0);else return Up*(0X1/0);end;end;end;GD=0;end;end;end;end;end;else K=(Kp or bit32);end;end;end;end;local y,w=K and K[yp]or function(qs,Ts)local Xs,Bs=nil,nil;for jp=0X00,5 do do if not(jp<=0X002)then if jp<=3 then Bs=ip;else if jp==4 then while qs>0 and Ts>0 do local Tj=(qs%16);local Ej,Vj=Ts%Tp,(0X0003);repeat if not(Vj<=1)then if Vj==0X2 then Ts=(Ts-Ej)/0X10;do Vj=0X0;end;else do Bs=Bs+q[Tj][Ej]*Xs;end;Vj=0x1;end;else do if Vj~=0 then do qs=(qs-Tj)/0X10;end;Vj=2;else do Xs=Xs*16;end;Vj=0X4;end;end;end;until Vj>3;end;else do return Bs+qs*Xs+Ts*Xs;end;end;end;else if jp<=0 then qs=qs%O;else if jp~=0X1 then Ts=Ts%O;else Xs=0X01;end;end;end;end;end;end,assert;local T=K and K.band or function(WT,YT)local iT=(0X0);while 419793210 do if iT~=0X0 then do YT=YT%O;end;break;else WT=WT%O;iT=0X0001;end;end;return((WT+YT)-y(WT,YT))/0X2;end;local X=K and K.bor or function(VS,iS)local vS=0X0000;repeat if not(vS<=0)then if vS==1 then iS=iS%O;do vS=2;end;else do return z-T(z-VS,z-iS);end;end;else VS=VS%O;vS=0X1;end;until(false);end;local b=(K and K.bnot or function(xx)do return z-(xx%O);end;end);local A,s=K and K.lshift,(K and K.rshift);do A=A or function(h3,y3)if y3>=0X000020 then return 0X00;end;local z3=(0X00001);repeat if z3==0X00000 then return(h3*l[y3])%O;else if y3<0 then return s(h3,-y3);end;do z3=0;end;end;until(false);end;end;Zp=9;local Z,h,U,Fp,wp,pp,Dp,cp,j,Ip=nil,nil,nil,nil,nil,nil,nil,nil,nil,(nil);repeat if not(Zp<=5)then if Zp<=0x8 then do if Zp<=6 then do Fp=function(...)return p(Xp,...),{...};end;end;Zp=4;else if Zp==0X7 then Dp=function(mn)local Kn=(B());local Gn="";for XQ=1,Kn,7997 do local rQ,fQ=0,nil;repeat if rQ~=0x000 then if fQ>Kn then do fQ=Kn;end;end;rQ=2;else fQ=XQ+7997-1;rQ=0x0001;end;until rQ==0X2;local FQ={E(C,f+XQ-1,f+fQ-0X1)};for Ue=0x1,#FQ do local Ae=0X0;while'Sm\108%'do if Ae==0x00000 then FQ[Ue]=y(FQ[Ue],U);do Ae=1;end;else U=(mn*U+193)%0x100;do break;end;end;end;end;do Gn=Gn..a(N(FQ));end;end;local Sn=0X0;do while-291211142 do if Sn==0X0000 then f=f+Kn;Sn=0x001;else do return Gn;end;end;end;end;end;Zp=0;else pp=function(Kc)local ec={E(C,f,f+3)};local Sc=(0X5);local pc,mc,Vc,wc=nil,nil,nil,nil;while-1016224969 do do if Sc<=0X00002 then if not(Sc<=0)then if Sc==1 then return wc*0X1000000+Vc*65536+mc*256+pc;else do wp=(193*wp+Kc)%256;end;Sc=6;end;else do mc=y(ec[0x2],wp);end;do Sc=3;end;end;else if Sc<=0X04 then if Sc==0X3 then Vc=y(ec[3],wp);Sc=4;else wc=y(ec[4],wp);Sc=0X00002;end;else if Sc~=5 then f=f+4;Sc=1;else pc=y(ec[0X01],wp);Sc=0;end;end;end;end;end;end;Zp=7;end;end;end;else if not(Zp<=9)then if Zp==0X0000A then j=function()local Jn=0x1;local sn=nil;do repeat if Jn<=0X0 then if not(sn>P)then else return sn-O;end;do Jn=0X02;end;else if Jn~=1 then return sn;else sn=h();Jn=0;end;end;until false;end;end;Zp=1;else U=Q();do Zp=0X6;end;end;else do s=s or function(qG,xG)if xG>=32 then do return 0X0;end;end;if xG<0X0 then return A(qG,-xG);end;local vG=nil;for da=0X0,0X001 do if da==0 then vG=(qG%O/l[xG]);else return vG-vG%1;end;end;end;end;Zp=5;end;end;else if Zp<=2 then if not(Zp<=0X0)then if Zp~=1 then function Ip(a3,q3,V3)local K3=(q3[1]);local m3=(q3[0x5]);local x3,B3,W3=q3[0X7],q3[9],(q3[0X6]);local U3=q3[8];local k3,v3=q3[3],q3[0X00004];local Z3=(J({},{__mode="v"}));local N3=nil;N3=function(...)local rg=({});local Mg=(0);local Pg=((g and g()or _ENV));local Ug,ug=Fp(...);Ug=Ug-0X01;do for Ii=0,Ug do if W3>Ii then do rg[Ii]=ug[Ii+1];end;else break;end;end;end;local pg=((Pg==k and V3 or Pg));(rp)[2]=q3;rp[0X3]=rg;if not K3 then ug=nil;else if k3 then rg[W3]={n=Ug>=W3 and Ug-W3+0X00001 or 0x0,N(ug,W3+1,Ug+0X00001)};end;end;if pg==Pg then else do if not(o)then _ENV=pg;else(o)(N3,pg);end;end;end;local Yg=0x001;while 0.3464677086113457 do local Om=(x3[Yg]);local fm=(Om[7]);Yg=Yg+0X1;do if not(fm>=0X02f)then do if not(fm>=0x17)then if fm>=0XB then if fm>=0X11 then if not(fm<0x0014)then if fm>=21 then if fm~=0X0016 then rg[Om[0X6]]={N({},1,Om[1])};else do if Om[3]~=0XF6 then rg[Om[0X6]]=rg[Om[0X0001]];else Yg=Yg-0X1;x3[Yg]={[0X7]=0,[1]=(Om[1]-62),[0x6]=(Om[0X6]-0X3e)};end;end;end;else do rg[Om[6]][rg[Om[0x00001]]]=rg[Om[0X03]];end;end;else if not(fm<0X12)then if fm==19 then local ZH=Om[0X006];local iH=(S(function(...)(v)();for k2 in...do v(true,k2);end;end));(iH)(rg[ZH],rg[ZH+0X0001],rg[ZH+2]);do Mg=ZH;end;for KD in L,rg do if not(KD>Mg)then else do(rg)[KD]=nil;end;end;end;rg[ZH]=iH;Yg=Om[1];else if Om[0X3]==111 then Yg=Yg-1;x3[Yg]={[0x1]=(Om[0X1]-0X0000bA),[7]=92,[6]=(Om[6]-0XbA)};else(rg)[Om[6]]=nil;end;end;else do(rg)[Om[6]]=X(rg[Om[0X1]],rg[Om[3]]);end;end;end;else if not(fm>=0Xe)then if not(fm<12)then if fm~=13 then(rg)[Om[0x6]]=false;else(rg)[Om[0x6]]=-rg[Om[0X1]];end;else local iQ=(a3[Om[1]]);(iQ[0X1])[iQ[0x2]]=rg[Om[6]];end;else if not(fm>=15)then if not(rg[Om[1]]<=rg[Om[0X3]])then else do Yg=Om[0X6];end;end;else if fm==0x00010 then(rg)[Om[0X6]]=Om[0X5];else(rg)[Om[0x0006]]=rg[Om[1]]%rg[Om[0X3]];end;end;end;end;else do if fm<0X005 then if not(fm<0X0002)then if not(fm<0x3)then if fm==4 then rg[Om[0X6]]=rp[Om[1]];else(rg)[Om[0X6]]=#rg[Om[0X1]];end;else rg[Om[0x06]]=rg[Om[0X1]]<rg[Om[3]];end;elseif fm==0X0001 then if rg[Om[1]]==rg[Om[3]]then else Yg=Om[0X6];end;else repeat local Vt,dt=Z3,rg;if not(#Vt>0x0)then else local rG=({});for qb,ub in L,Vt do do for ki,vi in L,ub do if not(vi[0X001]==dt and vi[0X2]>=0)then else local xw=(vi[0X00002]);if not(not rG[xw])then else do(rG)[xw]={dt[xw]};end;end;vi[1]=rG[xw];vi[0X2]=1;end;end;end;end;end;until true;local aW=Om[6];do return N(rg,aW,aW+Om[1]-0X2);end;end;else if not(fm>=8)then if fm>=0x6 then if fm~=7 then(rg[Om[6]])[Om[5]]=Om[4];else rg[Om[6]]=y(rg[Om[0X00001]],rg[Om[3]]);end;else local eD=Om[0x006];local TD=(rg[Om[0X1]]);(rg)[eD+0X1]=TD;do(rg)[eD]=TD[Om[0x004]];end;end;else do if fm>=0X9 then if fm==0Xa then(rg)[Om[6]]=A(rg[Om[1]],rg[Om[3]]);else local rv=rg[Om[1]]/rg[Om[3]];rg[Om[0X6]]=rv-rv%1;end;else local L7=(Om[6]);Mg=L7+Om[1]-0X1;for fS in L,rg do if not(fS>Mg)then else do(rg)[fS]=nil;end;end;end;rg[L7]=rg[L7](N(rg,L7+1,Mg));Mg=L7;for c2 in L,rg do do if c2>Mg then(rg)[c2]=nil;end;end;end;end;end;end;end;end;end;else if fm>=35 then if not(fm>=41)then do if fm<0X0026 then if fm>=0x00024 then if fm==0X00025 then local nB=Om[6];local FB=rg[nB];local sB=(Om[3]-0X0001)*0X32;do for so=0x0001,Om[0X1]do FB[sB+so]=rg[nB+so];end;end;else local Yz=Om[0X6];local Nz,gz=rg[Yz]();if Nz then do Yg=Om[1];end;do(rg)[Yz+0X03]=gz;end;end;end;else rg[Om[0X006]]=rg[Om[1]][Om[4]];end;else if not(fm<39)then if fm~=40 then repeat local kF,VF=Z3,(rg);if#kF>0X00 then local Mc=({});for dq,Aq in L,kF do for M8,C8 in L,Aq do if C8[1]==VF and C8[2]>=0 then local fK=C8[2];do if not Mc[fK]then Mc[fK]={VF[fK]};end;end;(C8)[0X1]=Mc[fK];do C8[2]=0X0001;end;end;end;end;end;until true;return rg[Om[6]];else local ZQ,tQ=Om[0X6],(Om[0x1]);if tQ==0X00000 then else Mg=ZQ+tQ-0x1;for et in L,rg do do if et>Mg then(rg)[et]=nil;end;end;end;end;local vQ,DQ,kQ=Om[3],nil,nil;do if tQ==1 then DQ,kQ=Fp(rg[ZQ]());else do DQ,kQ=Fp(rg[ZQ](N(rg,ZQ+1,Mg)));end;end;end;if vQ~=1 then do if vQ==0X0 then do DQ=DQ+ZQ-1;end;do Mg=DQ;end;else DQ=ZQ+vQ-2;do Mg=DQ+1;end;end;end;local N8=0;for OD=ZQ,DQ do do N8=N8+0x1;end;rg[OD]=kQ[N8];end;else Mg=ZQ-0x1;end;do for RI in L,rg do do if RI>Mg then do rg[RI]=nil;end;end;end;end;end;end;else local l0=(Om[6]);local c0,n0=rg[l0]();if not(c0)then else rg[l0+0X1]=n0;Yg=Om[0X0001];end;end;end;end;else if not(fm<44)then do if fm<45 then if not(rg[Om[0X1]]<=rg[Om[0X3]])then Yg=Om[6];end;else do if fm~=0X0002e then do if rg[Om[0X0001]]==rg[Om[0X0003]]then Yg=Om[0X6];end;end;else(rg)[Om[0x0006]]=b(rg[Om[1]]);end;end;end;end;else if fm>=0x2A then do if fm==43 then rg[Om[6]]={};else(rg)[Om[0X00006]]=rg[Om[1]]+rg[Om[3]];end;end;else local YN=Om[6];do Mg=YN+1;end;for j_ in L,rg do do if j_>Mg then rg[j_]=nil;end;end;end;(rg[YN])(rg[YN+1]);Mg=YN-1;for DV in L,rg do if not(DV>Mg)then else rg[DV]=nil;end;end;end;end;end;else if fm<0X001d then do if not(fm<0x00001a)then if fm<27 then if not(rg[Om[0X01]]<rg[Om[3]])then Yg=Om[0X6];end;else if fm==0X0001C then rg[Om[6]]=rg[Om[0X1]]==rg[Om[0X3]];else local lG=(Om[6]);local sG,IG=rg[lG]();do if sG then for Eb=0X1,Om[3]do do rg[lG+Eb]=IG[Eb];end;end;Yg=Om[1];end;end;end;end;else if fm<24 then(rg)[Om[0X00006]]=rg[Om[1]]^rg[Om[0X3]];else if fm~=0X19 then(pg)[Om[5]]=rg[Om[6]];else rg[Om[6]]=rg[Om[0x1]]>=rg[Om[0x3]];end;end;end;end;else if not(fm<32)then do if fm<33 then local ys=Om[0X6];Mg=ys+2;for NJ in L,rg do if NJ>Mg then rg[NJ]=nil;end;end;(rg)[ys]=rg[ys](rg[ys+1],rg[ys+0x2]);Mg=ys;for xc in L,rg do do if not(xc>Mg)then else rg[xc]=nil;end;end;end;else if fm==0X0022 then do rg[Om[0X006]]=rg[Om[1]]+Om[4];end;else local Rv=Om[6];local Ov,Ev,uv=rg[Rv]();if Ov then rg[Rv+1]=Ev;rg[Rv+0X2]=uv;Yg=Om[0X1];end;end;end;end;else if fm>=30 then if fm~=0X01f then(rg)[Om[6]]=rg[Om[1]]-rg[Om[3]];else local Va=(Om[0X6]);Mg=Va+0X2;for Sn in L,rg do if not(Sn>Mg)then else do(rg)[Sn]=nil;end;end;end;(rg[Va])(rg[Va+1],rg[Va+2]);Mg=Va-0X00001;for v_ in L,rg do if v_>Mg then rg[v_]=nil;end;end;end;else rg[Om[6]]=rg[Om[0X00001]]~=Om[4];end;end;end;end;end;end;else if fm>=71 then if not(fm<0X53)then if not(fm>=0X59)then if not(fm<86)then do if not(fm>=87)then local hZ=(Om[1]);rg[Om[0X6]]=rg[hZ]..rg[hZ+1];else do if fm==0X58 then do rg[Om[0X6]]=rg[Om[0X1]][rg[Om[0X00003]]];end;else local i_=(Om[1]);local p_=rg[i_];for dG=i_+0X0001,Om[0X3]do p_=p_..rg[dG];end;(rg)[Om[0X006]]=p_;end;end;end;end;else if fm<0X0054 then local jF=(Om[0X06]);local ZF=rg[jF];local bF,dF=rg[jF+0X0001],rg[jF+0x002];(rg)[jF]=S(function()for u0=ZF,bF,dF do(v)(true,u0);end;end);Yg=Om[1];else if fm==85 then local PL=Om[0x06];Mg=PL+1;for iA in L,rg do if iA>Mg then(rg)[iA]=nil;end;end;rg[PL]=rg[PL](rg[PL+0X1]);Mg=PL;for co in L,rg do if not(co>Mg)then else do rg[co]=nil;end;end;end;else(rg)[Om[6]]=rg[Om[0x1]]/rg[Om[3]];end;end;end;else if fm>=92 then do if not(fm<0x5d)then if fm==0X00005E then do if rg[Om[6]]then Yg=Om[0X1];end;end;else if not(rg[Om[1]]<=Om[4])then Yg=Om[6];end;end;else do repeat local Zq,lq=Z3,(rg);if not(#Zq>0)then else local eo={};do for zS,PS in L,Zq do for Do,Po in L,PS do if Po[0x001]==lq and Po[0X2]>=0 then local mg=Po[0x002];do if not eo[mg]then(eo)[mg]={lq[mg]};end;end;Po[1]=eo[mg];(Po)[0X2]=0X1;end;end;end;end;end;until true;end;return;end;end;else if not(fm>=90)then local yF=(a3[Om[0X1]]);do rg[Om[0X6]]=yF[0X1][yF[2]];end;else if fm==0X00005b then local X8=Om[6];local H8=(Ug-W3);do if H8<0 then H8=-0X1;end;end;for lx=X8,X8+H8 do rg[lx]=ug[W3+(lx-X8)+0X1];end;do Mg=X8+H8;end;for Lq in L,rg do if not(Lq>Mg)then else rg[Lq]=nil;end;end;else do rg[Om[0X0006]][rg[Om[0x1]]]=Om[0X4];end;end;end;end;end;else if not(fm<77)then if not(fm>=0X50)then if fm<78 then if Om[3]==132 then Yg=Yg-0X00001;x3[Yg]={[6]=(Om[0X00006]-0X000023),[1]=(Om[1]-35),[0X0007]=18};elseif Om[3]==0X032 then Yg=Yg-1;do x3[Yg]={[1]=(Om[1]-0X6E),[0x6]=(Om[0X00006]-110),[0X7]=72};end;elseif Om[0X0003]==0X0000dd then Yg=Yg-0X1;x3[Yg]={[0X07]=72,[0x0006]=(Om[0X06]-0XC4),[0x01]=(Om[0X1]-0Xc4)};elseif Om[3]==179 then do Yg=Yg-0x1;end;(x3)[Yg]={[7]=0X003,[0X6]=(Om[6]-0Xc7),[0x01]=(Om[0X00001]-199)};else do if not(not rg[Om[6]])then else Yg=Om[0X1];end;end;end;else if fm==0X4F then rg[Om[6]]=rg[Om[1]]==Om[4];else if not(rg[Om[0X1]]<rg[Om[3]])then else Yg=Om[0X006];end;end;end;else if not(fm>=81)then rg[Om[6]]=rg[Om[0X00001]]>rg[Om[3]];else if fm~=82 then do if not(not(Om[5]<rg[Om[0X3]]))then else Yg=Om[6];end;end;else do rg[Om[6]]=rg[Om[1]]*rg[Om[3]];end;end;end;end;else do if not(fm<0X4a)then do if not(fm>=0X04B)then for Ag=Om[0X6],Om[0X00001]do do(rg)[Ag]=nil;end;end;else if fm~=76 then rg[Om[6]]=pg[Om[0X5]];else do rg[Om[6]]=rg[Om[1]]%Om[4];end;end;end;end;else if not(fm<0x0048)then if fm~=0x000049 then if Om[3]==140 then Yg=Yg-0X1;x3[Yg]={[0x00007]=92,[0X6]=(Om[6]-0x0020),[0X1]=(Om[0X1]-32)};elseif Om[0X3]~=7 then repeat local IS,qS=Z3,rg;do if not(#IS>0x0)then else local iQ=({});for yl,cl in L,IS do do for z3,y3 in L,cl do if not(y3[0X1]==qS and y3[0x2]>=0x000)then else local yW=(y3[2]);if not(not iQ[yW])then else do iQ[yW]={qS[yW]};end;end;y3[1]=iQ[yW];(y3)[2]=0X1;end;end;end;end;end;end;until true;return N(rg,Om[0X00006],Mg);else Yg=Yg-1;(x3)[Yg]={[1]=(Om[1]-0Xa5),[6]=(Om[6]-0XA5),[7]=0X000012};end;else if Om[3]~=0X6a then do repeat local qi,si,Fi=Z3,rg,Om[0X06];if#qi>0 then local Ny=({});for lD,QD in L,qi do for k1,Z1 in L,QD do if not(Z1[0X1]==si and Z1[0X2]>=Fi)then else local Si=(Z1[0X2]);if not(not Ny[Si])then else Ny[Si]={si[Si]};end;(Z1)[1]=Ny[Si];Z1[0X00002]=0X01;end;end;end;end;until true;end;else Yg=Yg-1;(x3)[Yg]={[0x01]=(Om[1]-153),[7]=0X12,[0X6]=(Om[0x6]-0X99)};end;end;else(rg[Om[0X6]])[Om[5]]=rg[Om[0X3]];end;end;end;end;end;else if not(fm>=59)then if fm>=0X35 then if fm>=56 then do if not(fm<0X0039)then if fm~=58 then local Nh=Om[0X006];local th=S(function(...)(v)();for m0,T0,X0,h0,G0,B0,g0,U0,K0,k0 in...do v(true,{m0,T0,X0,h0,G0,B0,g0,U0,K0,k0});end;end);th(rg[Nh],rg[Nh+0x1],rg[Nh+2]);Mg=Nh;for BZ in L,rg do if BZ>Mg then rg[BZ]=nil;end;end;(rg)[Nh]=th;do Yg=Om[1];end;else local MR=Om[0X006];local HR=S(function(...)(v)();do for My,Ty in...do v(true,My,Ty);end;end;end);HR(rg[MR],rg[MR+0x0001],rg[MR+0X02]);do Mg=MR;end;for wv in L,rg do if wv>Mg then do rg[wv]=nil;end;end;end;(rg)[MR]=HR;Yg=Om[1];end;else local qr,vr=Om[0x06],(Om[3]-1)*50;local hr=(rg[qr]);for Wq=1,Mg-qr do(hr)[vr+Wq]=rg[qr+Wq];end;end;end;else if not(fm<0X0036)then if fm~=0x37 then(rg)[Om[0X0006]]=T(rg[Om[0X0001]],rg[Om[0X3]]);else rg[Om[0X6]]=rg[Om[1]]<=rg[Om[3]];end;else Mg=Om[0X0006];for Fs in L,rg do if not(Fs>Mg)then else(rg)[Fs]=nil;end;end;rg[Mg]();do Mg=Mg-0x1;end;do for oY in L,rg do do if not(oY>Mg)then else rg[oY]=nil;end;end;end;end;end;end;else if fm>=0x032 then if fm>=51 then if fm~=52 then local LQ=(Om[6]);Mg=LQ+Om[1]-0X1;do for jp in L,rg do if jp>Mg then rg[jp]=nil;end;end;end;(rg[LQ])(N(rg,LQ+0X001,Mg));do Mg=LQ-0X01;end;for iO in L,rg do if not(iO>Mg)then else rg[iO]=nil;end;end;else Yg=Om[1];end;else Mg=Om[6];for K5 in L,rg do if K5>Mg then do(rg)[K5]=nil;end;end;end;rg[Mg]=rg[Mg]();do for PB in L,rg do do if not(PB>Mg)then else rg[PB]=nil;end;end;end;end;end;else do if not(fm>=0x30)then(rg)[Om[6]]=s(rg[Om[0x01]],rg[Om[0X3]]);else do if fm==0X031 then local b7=B3[Om[0X1]];local O7=nil;local G7=(b7[2]);local y7=(#G7);if y7>0X0 then do O7={};end;for kg=0X00001,y7 do local Hg=G7[kg];if Hg[0x1]~=0 then do O7[kg-1]=a3[Hg[0X2]];end;else(O7)[kg-0X0001]={rg,Hg[2]};end;end;(i)(Z3,O7);end;(rg)[Om[0X6]]=Ip(O7,b7,pg);else if rg[Om[1]]~=Om[4]then Yg=Om[0x0006];end;end;end;end;end;end;end;else if not(fm<65)then if not(fm<68)then if not(fm<0X45)then do if fm==0X46 then do repeat local V4,C4=Z3,(rg);if#V4>0X00 then local me=({});for K5,i5 in L,V4 do for U8,X8 in L,i5 do if not(X8[0X1]==C4 and X8[2]>=0x00)then else local Ow=X8[0X0002];if not(not me[Ow])then else me[Ow]={C4[Ow]};end;X8[1]=me[Ow];X8[2]=1;end;end;end;end;until true;end;do return rg[Om[0X006]]();end;else local M4=Om[0X0001];local n4=Om[6];Mg=n4+M4-1;for Ec in L,rg do if not(Ec>Mg)then else rg[Ec]=nil;end;end;do repeat local sL,WL=Z3,(rg);do if not(#sL>0)then else local ZC={};for fg,kg in L,sL do for IC,GC in L,kg do do if GC[0X1]==WL and GC[0X2]>=0X0 then local iM=(GC[2]);do if not(not ZC[iM])then else(ZC)[iM]={WL[iM]};end;end;GC[1]=ZC[iM];(GC)[2]=0X1;end;end;end;end;end;end;until true;end;return rg[n4](N(rg,n4+1,Mg));end;end;else if rg[Om[1]]==Om[4]then Yg=Om[0X6];end;end;else do if fm<0X000042 then rg[Om[0x6]]=rg[Om[0X001]]~=rg[Om[0X00003]];else if fm==67 then rg[Om[0X6]]=Om[5];else do rp[Om[1]]=rg[Om[6]];end;end;end;end;end;else if not(fm<62)then if not(fm>=63)then repeat local HI,VI=Z3,(rg);if not(#HI>0X0)then else local dj=({});for Uy,Hy in L,HI do do for W8,T8 in L,Hy do if not(T8[0X1]==VI and T8[0X02]>=0X000)then else local no=(T8[0X0002]);if not(not dj[no])then else dj[no]={VI[no]};end;do(T8)[1]=dj[no];end;T8[0x2]=0x1;end;end;end;end;end;until true;local Uq=Om[6];return rg[Uq](N(rg,Uq+0x1,Mg));else if fm~=0X40 then local z2=Om[0X6];for Tw=z2,z2+(Om[1]-1)do(rg)[Tw]=ug[W3+(Tw-z2)+0X01];end;else(rg)[Om[6]]=not rg[Om[0X01]];end;end;else if fm>=0X0003c then if fm~=0X00003D then local RP=(Om[6]);for Ht in L,rg do do if not(Ht>Mg)then else do rg[Ht]=nil;end;end;end;end;(rg)[RP]=rg[RP](N(rg,RP+1,Mg));Mg=RP;for Ub in L,rg do if Ub>Mg then rg[Ub]=nil;end;end;else local VX=Om[6];do for aR in L,rg do if not(aR>Mg)then else rg[aR]=nil;end;end;end;rg[VX](N(rg,VX+0X01,Mg));do Mg=VX-0X01;end;for nz in L,rg do do if nz>Mg then rg[nz]=nil;end;end;end;end;else rg[Om[0X6]]=true;end;end;end;end;end;end;end;end;end;do if not(o)then else(o)(N3,V3);end;end;return N3;end;Zp=0XC;else Zp=2;end;else cp={};Zp=0XA;end;else do if Zp<=3 then h=function()local lg=0;local Zg=(0);repeat local o5=E(C,f,f);f=f+0X1;lg=X(lg,A(T(o5,127),Zg));if T(o5,0X00080)~=0x0 then else do return lg;end;end;Zg=Zg+7;until false;end;Zp=0Xb;else if Zp==4 then do wp=Q();end;Zp=8;else Z={[0X3]=4,[8]=6,[9]=1,[0]=9,[2]=8,[0x0006]=2,[1]=5,[4]=0X0006};Zp=0X0003;end;end;end;end;end;until Zp>11;local r=error;local function Ep()local Qk={};local rk,Mk,lk={},{lp,lp,nil,lp,nil,nil,{},{},{}},(1);local zk=0;while true do do if not(zk<=0X00)then if zk~=1 then(Mk)[0X00004]=h();zk=0X01;else do(Mk)[0x00F]=Q();end;break;end;else Mk[0X6]=h();zk=2;end;end;end;local Bk=(Mk[0X7]);local Pk=(B()-0x13d6);zk=1;local Lk=(nil);repeat if zk~=0x0 then Lk={};do zk=0X0;end;else for xS=0X1,Pk do do Bk[xS]={[6]=j(),[0X5]=Q(),[Np]=j(),[4]=Q(),[7]=h(),[Vp]=j(),[2]=Q()};end;end;do zk=2;end;end;until zk>1;local Rk,Vk,jk,ck=nil,nil,nil,nil;for z2=0,12 do if z2<=5 then do if not(z2<=0X2)then if z2<=3 then Mk[0XF]=Q();else if z2~=0x4 then jk=Mk[9];else Vk=B()-bp;end;end;else if z2<=0X0 then Rk=Q();else if z2~=0x1 then do(Mk)[3]=u(Rk,2,Vp)~=0;end;else Mk[1]=u(Rk,0x1,0x1)~=0x0;end;end;end;end;else if z2<=0X08 then if not(z2<=0x6)then do if z2~=7 then Mk[Tp]=B();else(Mk)[0X0000C]=B();end;end;else do for lM=0,Vk-1 do(jk)[lM]=Ep();end;end;end;elseif z2<=10 then if z2~=9 then for U0=1,h()do(rk)[U0]={Q(),h()};end;else(Mk)[2]=rk;end;else if z2==11 then Mk[0x5]=h();else ck=B()-0X10452;end;end;end;end;local Ik=Q();local xk=(Q()~=0X0);zk=0X1;do while zk<2 do if zk~=0 then do for hd=1,ck do local dd,Kd=nil,(nil);for QM=0X00,0X2 do if not(QM<=0)then do if QM==0X1 then do Kd=Q();end;else(Qk)[hd-1]=lk;end;end;else do dd=nil;end;end;end;do if Kd==122 then dd=Ap;elseif Kd==0X063 then dd=V()+B();else if Kd==186 then dd=B();elseif Kd==188 then dd=I(Dp(Ik),0X03);elseif Kd==0x91 then do dd=V();end;elseif Kd==139 then dd=B();elseif Kd==0XEB then dd=M();else if Kd==0xC7 then dd=sp;else if Kd==0X00038 then dd=M();end;end;end;end;end;local sd,Ed={dd,{}},(0);while Ed<=0X2 do if Ed<=0X0 then(Lk)[lk]=sd;Ed=1;else if Ed~=0X1 then if not(xk)then else local rl=0x1;repeat if rl~=0 then cp[Hp]=sd;rl=0;else do Hp=Hp+1;end;break;end;until(false);end;Ed=3;else lk=lk+0X1;Ed=2;end;end;end;end;end;zk=0;else for d5=1,Pk do local j5=(nil);for B6=0x0,0x1 do do if B6~=0 then for cQ,HQ in Gp(G)do local uQ=(Z[HQ]);local DQ=j5[uQ];if DQ==0xC then local mP=(Qk[j5[HQ]]);local fP=(Lk[mP]);if not(fP)then else local hd,Xd=0X0,nil;while hd<=0x2 do if hd<=0 then do(j5)[uQ]=fP[Vp];end;hd=1;else if hd==1 then Xd=fP[2];hd=2;else(Xd)[#Xd+1]={j5,uQ};hd=0X03;end;end;end;end;else if DQ~=0Xb then else do(j5)[HQ]=d5+j5[HQ]+1;end;end;end;end;else j5=Mk[0X7][d5];end;end;end;end;do zk=0X2;end;end;end;end;do return Mk;end;end;local ap=Ep();local e=rawset;rp[1]=cp;do cp=nil;end;return Ip(nil,ap,k)(...);end)(string.byte,0x010,0x7,string.match,0x00005,table.insert,string.sub,0xD,0Xc,unpack,0x8,1,0x1000000,15,0X0,'\098x\111\114',select,ipairs,bit,0Xe,"#",3,tonumber,setmetatable,0x02,true,nil,54353,setfenv,string,0X9,table,0X06,4,11,false,coroutine.wrap,0xa,...);end;
